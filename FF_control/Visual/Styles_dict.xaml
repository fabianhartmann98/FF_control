<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <sys:Double x:Key="d_SideTabControlWidth">200</sys:Double>
    <GridLength x:Key="gridlength_SideTabControlWidth">200</GridLength>
    <sys:Double x:Key="d_MainTabControlWidth">150</sys:Double>

    <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource BasicForeground}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource BasicForeground}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="WrapPanel">
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style TargetType="StackPanel">
        <Setter Property="Margin" Value="0"/>
    </Style>
    
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BasicBackground}"/>
    </Style>

    <Style x:Key="Style_ModulBorder" TargetType="Border">
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ModulBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ModulBackround}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" Direction="270" Color="{DynamicResource ModulShadowColor}" 
                              Opacity="0.25" ShadowDepth="2"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Label" BasedOn="{StaticResource ControlBaseStyle}">
    </Style>

    <Style TargetType="Label" x:Key="Style_LabelHeading" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource BasicButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource BasicForegroundBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BasicButtonBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BasicButtonHoverBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BasicButtonDisabledForeground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BasicButtonDisabledForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="Style_ConnectButton" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource ConnectButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ConnectButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ConnectButtonForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="0"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ConnectButtonHoverBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="Style_DisconnectButton" BasedOn="{StaticResource Style_ConnectButton}">
        <Setter Property="Background" Value="{DynamicResource DisconnectButtonBackground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DisonnectButtonHoverBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Flat ComboBox -->
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{DynamicResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{DynamicResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{DynamicResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxArrowActiveBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxArrowActiveBackgroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ComboBoxArrowCheckedFill}"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                            ClickMode="Press" Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Template="{DynamicResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             Visibility="Hidden" Background="Transparent"
                             HorizontalAlignment="Left" VerticalAlignment="Center"
                             Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                           Focusable="False" AllowsTransparency="True"
                           IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                           PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{DynamicResource ComboBoxPopUpBackground}" Margin="0, 1, 0, 0"
                                    CornerRadius="0" BorderThickness="1,1,1,1" 
                                    BorderBrush="{DynamicResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Flat ComboBox -->

    <Style TargetType="TabItem" x:Key="Style_MainTabItem" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Width" Value="{StaticResource d_MainTabControlWidth}"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="0,1,0,1" BorderBrush="{DynamicResource MainTabItemSelectedBackground}" Background="{DynamicResource MainTabItemSelectedBackground}" 
                            Margin="0">
                            <ContentPresenter x:Name="ContentSite"
                                            ContentSource="Header"
                                            Margin="10,5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainTabItemSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainTabItemNotSelectedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Background" Value="{DynamicResource TabControlBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>  
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style TargetType="TabItem" x:Key="Style_SideTabItem" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="1,0,1,0" BorderBrush="{DynamicResource SideTabItemSelectedBackground}" Background="{DynamicResource SideTabItemSelectedBackground}" 
                            Margin="0">
                        <ContentPresenter x:Name="ContentSite"
                                        ContentSource="Header"
                                        Margin="10,5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SideTabItemSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SideTabItemNotSelectedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" x:Key="Style_SideTabControl" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Background" Value="{DynamicResource SideTabControlBackground}"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="Width" Value="{StaticResource d_SideTabControlWidth}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <StackPanel>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                            <TabPanel x:Name="HeaderPanel"                                                                  
                                  Margin="2,2,2,0"
                                  IsItemsHost="true"/>
                        </ScrollViewer>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridSplitter" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource GridSplitterBackground}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="3"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
    </Style>

    <Style TargetType="ScrollViewer" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style TargetType="DataGrid" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackground}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderBorder}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="MinWidth" Value="60"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBacground}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DataGridCellBorder}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Margin" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridCellSelectedBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DataGridCellSelectedForeground}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Width" Value="0"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="Style_ColorBorder">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Stles that the ScrollViewer has out of the box
    Quelle: sacha: https://sachabarbs.wordpress.com/2008/01/11/styling-a-scrollviewerscrollbar-in-wpf/ [5.4.17]
         -->

    <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                          Name="Border"
                          Margin="1"
                          CornerRadius="0"
                          Background="{DynamicResource Scrole_NormalBrush}"
                          BorderBrush="{DynamicResource Scrole_NormalBorderBrush}"
                          BorderThickness="0">
                        <Path
                            Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource Scrole_ArrowFill}"
                            Data="{Binding Path=Content,
                            RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Arrow" Property="Fill"
                                Value="{DynamicResource Scrole_ArrowPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                Value="{DynamicResource Scrole_DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource Scrole_NormalBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{DynamicResource Scrole_ThumbBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Name="ThumbBorder"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding Background}"
                          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Scrole_ThumbBackgroundHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border 
                Grid.RowSpan="3"
                Background="{DynamicResource Scrole_NormalBrush}"
                />
            <RepeatButton
                  Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
                  Name="PART_Track"
                  Grid.Row="1"
                  IsDirectionReversed="true">

                <Track.DecreaseRepeatButton>
                    <RepeatButton
                      Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                          Style="{StaticResource ScrollBarThumb}"
                          Margin="4,0,4,0"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                      Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                  Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border 
                Grid.ColumnSpan="3"
                Background="{DynamicResource Scrole_NormalBrush}"
                />
            <RepeatButton
                  Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
                  Name="PART_Track"
                  Grid.Column="1"
                  IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                      Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                          Style="{StaticResource ScrollBarThumb}"
                          Margin="0,4,0,4">                        
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                      Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>                
            </Track>
            <RepeatButton
                  Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    
    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>        
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template"
                        Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
                        Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- All the following Code is required to Re-Style the Slider
    Quelle: http://www.wpfhelper.com/index.php/23-modern-ui-for-wpf/android-ui-for-wpf/25-wpf-slider-style-inspired-by-android-->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Name="outerBorder"
                            Background="{DynamicResource SliderOuterBackground}"
                            BorderBrush="{DynamicResource SliderOuterBackground}"
                            Height="26" Width="26" Opacity="1" BorderThickness="2" CornerRadius="13"/>
                        <Border Name="innerBorder"
                            Background="{DynamicResource SliderInnerBackground}"
                            BorderBrush="{DynamicResource SliderInnerBackground}"
                            Height="10" Width="10" CornerRadius="5" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource SliderInnerBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="outerBorder" Property="Background" Value="{StaticResource SliderDisabledBackground}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource SliderDisabledBackground}" />
                            <Setter TargetName="innerBorder" Property="Width" Value="4" />
                            <Setter TargetName="innerBorder" Property="Height" Value="4" />
                            <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{DynamicResource SliderTrickBarFill}" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
            <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="{DynamicResource SliderTrackBackground}"
                VerticalAlignment="Center" Height="4" />
            <Track x:Name="PART_Track" Grid.Row="1" VerticalAlignment="Center">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}"/>
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="{DynamicResource SliderTrickBarFill}" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{DynamicResource SliderTrickBarFill}" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
            <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="{DynamicResource SliderTrackBackground}"
                HorizontalAlignment="Center" Width="4" />
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="{DynamicResource SliderTrickBarFill}" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>